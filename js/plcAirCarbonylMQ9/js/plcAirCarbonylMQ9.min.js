const ClassSensor=require("plcSensor.min.js");class ClassAirCarbonylMQ9 extends ClassSensor{constructor(_opts,_sensor_props){ClassSensor.call(this,_opts,_sensor_props),this._Name="ClassAirCarbonylMQ9",this._Sensor=require("BaseClassMQX.min.js").connect({dataPin:_opts.pins[0],heatPin:_opts.pins[1],model:"MQ9",r0:_opts.baseline}),this._MinPeriod=250,this._Interval}ControlHeater(_val){this._Sensor.heat(_val)}Preheat(){this._Channels[0].Status=2,console.log("Beginning to preheat MQ-9..."),this._Sensor.preheat(()=>{console.log("MQ-9 is heated!"),this._Channels[0].Status=1})}Calibrate(_val){this._Sensor.calibrate(_val)}Start(_num_channel,_period){let period="number"==typeof _period&_period>=this._MinPeriod?_period:this._MinPeriod;this._Channels[0].Status=1,this._Interval=setInterval(()=>{this._Channels[0].Value=1==this._Channels[0].Status?this._Sensor.read("CO"):0},period)}ChangeFreq(_num_channel,_freq){clearInterval(this._Interval),setTimeout(()=>this.Start(_freq),this._MinPeriod)}Stop(_num_channel){this._Channels[0].Status=0,clearInterval(this._Interval),this._Interval=null}}exports=ClassAirCarbonylMQ9;