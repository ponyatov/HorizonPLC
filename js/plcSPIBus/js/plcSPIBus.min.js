class ClassBaseSPIBus{constructor(){if(this.Instance)return this.Instance;ClassBaseSPIBus.prototype.Instance=this,this._SPIbus={},this._Pattern="SPI",this._IndexBus=10,this.Init()}Init(){let i=1,StrSPI="SPI"+i;for(;!eval("typeof "+StrSPI+" === 'undefined'");)eval(StrSPI+" instanceof SPI")&&(this._SPIbus[StrSPI]={IDbus:eval(StrSPI),Used:!1}),i++,StrSPI="SPI"+i}static get ERROR_CODE_ARG_MOSI_MISO_SCK_NOT_DEFINED(){return 10}static get ERROR_MSG_ARG_MOSI_MISO_SCK_NOT_DEFINED(){return"Error -> The MOSI, MISO, SCK port is not defined"}static get ERROR_CODE_SPI_PIN_NOT_EXISTING(){return 20}static get ERROR_MSG_SPI_PIN_NOT_EXISTING(){return"Error -> The SPI pin not existing"}AddBus(_opt){if(void 0===_opt.mosi||void 0===_opt.miso||void 0===_opt.sck)throw new ClassAppError(ClassBaseSPIBus.ERROR_MSG_ARG_MOSI_MISO_SCK_NOT_DEFINED,ClassBaseSPIBus.ERROR_CODE_ARG_MOSI_MISO_SCK_NOT_DEFINED);if(!(_opt.mosi instanceof Pin&&_opt.miso instanceof Pin&&_opt.sck instanceof Pin))throw new ClassAppError(ClassBaseSPIBus.ERROR_MSG_SPI_PIN_NOT_EXISTING,ClassBaseSPIBus.ERROR_CODE_SPI_PIN_NOT_EXISTING);let bus_name=this._Pattern+this._IndexBus;return this.SPIbus.bus_name={IDbus:new SPI,Used:!0},this.SPIbus.bus_name.IDbus.setup(_opt),++this._IndexBus,{NameBus:bus_name,IDbus:this.SPIbus.bus_name.IDbus}}}exports=ClassBaseSPIBus;