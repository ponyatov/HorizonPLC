var Sensors={MQ2:{rLoad:5e3,rClear:9.83,gas:{LPG:{coef:[-.45,2.95],ppm:1},CH4:{coef:[-.38,3.21],ppm:1},H2:{coef:[-.48,3.32],ppm:1},SMOKE:{coef:[-.42,3.54],ppm:1}}},MQ3:{rLoad:2e5,rClear:60,gas:{C2H5OH:{coef:[-.66,-.62],ppm:1}}},MQ4:{rLoad:2e4,rClear:4.4,gas:{CH4:{coef:[-.36,2.54],ppm:1}}},MQ5:{rLoad:2e4,rClear:6.5,gas:{LPG:{coef:[-.39,1.73],ppm:1},CH4:{coef:[-.42,2.91],ppm:1}}},MQ6:{rLoad:2e4,rClear:10,gas:{LPG:{coef:[-.42,2.91],ppm:1}}},MQ7:{rLoad:1e4,rClear:27,gas:{CO:{coef:[-.77,3.38],ppm:1}}},MQ8:{rLoad:1e4,rClear:70,gas:{H2:{coef:[-1.52,10.49],ppm:1}}},MQ9:{rLoad:1e4,rClear:9.8,gas:{LPG:{coef:[-.48,3.33],ppm:1},CH4:{coef:[-.38,3.21],ppm:1},CO:{coef:[-.48,3.1],ppm:1}}},MQ135:{rLoad:1e3,rClear:76.63,gas:{CO2:{coef:[-.42,6.87],ppm:1}}}},GasSensor=function(opts){return void 0===(opts=opts||{}).dataPin?new Error("Data pin is undefined"):void 0===opts.heatPin?new Error("Heat pin is undefined"):void 0===Sensors[opts.model]?new Error("Error in model name. Use MQ2, MQ3, MQ4, MQ5, MQ6, MQ7, MQ8, MQ9"):(this._dataPin=opts.dataPin,this._heatPin=opts.heatPin,this._model=Sensors[opts.model],this._intId=null,this._coef=1,this._times=5,void(this._preheat=30))};GasSensor.prototype.calibrate=function(coef){return this._coef=coef||this.calculateResistance()/this._model.rClear,this._coef},GasSensor.prototype.calculateResistance=function(){for(var r=0,i=0;i<this._times;i++)r+=this.getResistance();return r/=this._times},GasSensor.prototype.getResistance=function(){var vTemp=E.getAnalogVRef(),v=vTemp*analogRead(this._dataPin),r;return(vTemp-v)/v*this._model.rLoad},GasSensor.prototype.read=function(gas){if(gas&&void 0===this._model.gas[gas])return Error("Gas is undefined");gas||(gas=Object.keys(this._model.gas)[0]);var ratio=this.calculateResistance()/this._coef,res;return Math.pow(Math.E,(Math.log(ratio)-this._model.gas[gas].coef[1])/this._model.gas[gas].coef[0])*this._model.gas[gas].ppm},GasSensor.prototype.heat=function(pwr){analogWrite(this._heatPin,pwr)},GasSensor.prototype.preheat=function(callback){this.heat(1),callback&&setTimeout((function(){callback()}),1e3*this._preheat)},GasSensor.prototype.cycleHeat=function(callback){if(callback)this.heat(1),this._intId=setTimeout((function(){this.heat(.294),this._intId=setTimeout((function(){callback(),this.cycleHeat(callback)}),9e4)}),6e4);else try{clearTimeout(this._intId),this.heat(0)}catch(e){}},exports.connect=function(opts){return new GasSensor(opts)};