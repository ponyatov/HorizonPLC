class ClassRouteREPL{constructor(){this._InBuffer="",this._DefConsole=eval(E.getConsole()),this._IncrVal=0,this._MasterID="EWI",this._IsOn=!1,this._Name="RouteREPL",Object.on("repl-sub",()=>{this._IsOn||this.RouteOn()})}get NEW_MASTER_COMMAND(){return"@@C_M@@"}get IncrID(){return++this._IncrVal}InitEvents(){Object.on("repl-write",(commands,id)=>{id===this._MasterID&&commands.forEach(command=>{this.Receive(`${command}\r`)})}),Object.on("repl-cm",id=>this.ChangeMaster(id))}LoopbackBHandler(data){this._DefConsole.write(" "+data),Object.emit("repl-read",data)}DefConsoleHandler(data){if(this._DefConsole.write(data),this._InBuffer+=data,"\r"===data){let command=this._InBuffer;this._InBuffer="","EWI"===this._MasterID?this.Receive(command):-1!==command.indexOf(this.NEW_MASTER_COMMAND)&&this.ChangeMaster("EWI")}}RouteOn(){E.setConsole(LoopbackA,{force:!0}),this.InitEvents(),LoopbackB.on("data",data=>{this.LoopbackBHandler(data)}),this._DefConsole.on("data",data=>{this.DefConsoleHandler(data)}),this._IsOn=!0}Receive(command){return!!this._IsOn&&(Object.emit("repl-read",command),LoopbackB.write(command),!0)}ChangeMaster(id){this._MasterID=id,this._DefConsole.write("repl-read",this.ToMsgPattern(`Info>> New MasterREPL, ID: ${this._MasterID}`))}SetOff(){E.setConsole(this._DefConsole,{force:!0}),this._IsOn=!1}ToMsgPattern(str,id){return str}isREPLConnected(_flag){return _flag}}exports=ClassRouteREPL;